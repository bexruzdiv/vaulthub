---
- name: Update apt cache
  when: inventory_hostname == 'loadbalancer'
  apt:
    update_cache: yes

- name: Install certbot and plugins
  when: inventory_hostname == 'loadbalancer' and ansible_facts['distribution'] == "Ubuntu"
  apt:
    name: ["certbot", "python3-certbot-nginx"]
    state: present


- name: Install Nginx
  when: inventory_hostname == 'loadbalancer'
  apt:
    name: nginx
    state: present
- name: delete default nginx site
  when: inventory_hostname == 'loadbalancer'
  file:
    path: /etc/nginx/sites-available/default
    state: absent

- name: delete default nginx site
  when: inventory_hostname == 'loadbalancer'
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Copy nginx configuration without SSL
  when: inventory_hostname == 'loadbalancer' and nginx_loadbalancer_renew
  template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/sites-available/{{ nginx_loadbalancer_domain }}"
    owner: root
    group: root
    mode: "0644"


- name: Create a symbolic link
  when: inventory_hostname == 'loadbalancer' and nginx_loadbalancer_renew
  file:
    src: /etc/nginx/sites-available/{{ nginx_loadbalancer_domain }}
    dest: /etc/nginx/sites-enabled/{{ nginx_loadbalancer_domain }}
    state: link

- name: Create a symbolic link for nginx site
  when: inventory_hostname == 'loadbalancer' and nginx_loadbalancer_renew
  file:
    src: "/etc/nginx/sites-available/{{ nginx_loadbalancer_domain }}"
    dest: "/etc/nginx/sites-enabled/{{ nginx_loadbalancer_domain }}"
    state: link

- include_tasks: create-cert-standalone.yml
  when: nginx_loadbalancer_renew and inventory_hostname == 'loadbalancer'